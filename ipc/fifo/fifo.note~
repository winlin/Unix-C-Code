	FIFO的读写特性分为 阻塞方式 和 非阻塞方式
	当进程打开一个FIFO时，内核会为其分配一块空间进行数据缓冲，这个空间的大小是固定的。	
	一、阻塞方式的读写操作
	        如果进程以读方式打开 FIFO 进行操作，则可能发生阻塞的情况有两种：一种情况是 FIFO 内有数据，但是其他进程正在读这些数据；
	    另一种情况就是 FIFO 内没有数据。 当 FIFO 内有了数据且没有其他进程在读时，阻塞将解除。另外要注意，因 FIFO 内没有数据而阻塞的
	    情况只发生在第一次读操作时，后续的读操作在没有数据的情况下返回0；
	        对于写操作来说，当要写入的数据量“不大于” FIFO 的缓冲区是，系统将保证写操作的原子性。也就是说，如果此时 FIFO 的空闲缓冲区
	    不足以容纳要写入的字节数时，则操作将被阻塞，直到缓冲区足够时才一次性写入。当要写入的数据量“大于” FIFO 的缓冲区时，系统无法保
	    证写入操作的原子性，它可能会写入一部分，然后再把剩余的部分和下一次写入一起进行(interleave  man 7 pipe)。

	二、非阻塞方式的读写操作
	        对于读操作来说，如果没有数据可读则返回-1，并设置 errno 变量 EAGAIN ，提醒以后再试。
		对于写操作来说，当要写入的数据量“大于” FIFO 的缓冲区时，系统不保证写入操作的原子性，在写满所有 FIFO 空闲缓冲区后，写操作
	    返回；当要写入的数据量“不大于” FIFO 的缓冲区时，系统将保证写入的原子性。如果当前 FIFO 能够容纳请求写入的字节数，写完后成功返回，
	    如果不能则返回-1，并设置 errno 变量的值为 EAGAIN，提醒以后再试。
	    
	 总结：所谓的阻塞和非阻塞是指，当读写不能正常执行时，是挂起当前进程直到可继续执行为止；还是立即返回。
	       前者就是“阻塞式读写”，后者就是“非阻塞式读写”。    




下面是 man fcntl 中关于 强制锁/建议锁 的描述：
Mandatory locking
       (Non-POSIX.)  The above record locks may be either advisory or mandatory, and are advisory by default.

       Advisory locks are not enforced and are useful only between cooperating processes.

       Mandatory locks are enforced for all processes.  If a process tries  to  perform  an  incompatible  access
       (e.g.,  read(2)  or  write(2))  on  a file region that has an incompatible mandatory lock, then the result
       depends upon whether the O_NONBLOCK flag is enabled for its open file description.  If the O_NONBLOCK flag
       is  not enabled, then system call is blocked until the lock is removed or converted to a mode that is com-
       patible with the access.  If the O_NONBLOCK flag is enabled, then the system call  fails  with  the  error
       EAGAIN .

       To  make  use  of mandatory locks, mandatory locking must be enabled both on the file system that contains
       the file to be locked, and on the file itself.  Mandatory locking is enabled on a file  system  using  the
       "-o  mand"  option  to  mount(8), or the MS_MANDLOCK flag for mount(2).  Mandatory locking is enabled on a
       file by disabling group execute permission on the file and enabling the set-group-ID permission  bit  (see
       chmod(1) and chmod(2)).

       The Linux implementation of mandatory locking is unreliable.  See BUGS below.

